[tool.poetry]
name = "knight-hero-server"
version = "0.1.0"
description = "骑士英雄游戏服务器 - Knight Hero Game Server"
authors = ["lx"]
readme = "README.md"
packages = [{include = "common"}, {include = "services"}, {include = "launcher"}]

[tool.poetry.dependencies]
python = "^3.12.0"
uvloop = "^0.19.0"
fastapi = "^0.104.1"
websockets = "^12.0"
redis = "^5.0.1"
motor = "^3.3.2"
grpcio = "^1.60.0"
grpcio-tools = "^1.60.0"
protobuf = "^4.25.1"
pydantic = "^2.5.2"
orjson = "^3.9.10"
supervisor = "^4.2.5"
beanie = "^1.30.0"
cryptography = "^45.0.4"
aiofiles = "^24.1.0"
pandas = "^2.3.0"
croniter = "^6.0.0"
msgpack = "^1.1.1"
pyyaml = "^6.0.2"
aiohttp = "^3.12.13"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
black = "^23.0.0"
isort = "^5.12.0"
pylint = "^3.0.0"
mypy = "^1.7.0"
flake8 = "^6.0.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# pytest 配置
asyncio_mode = "auto"
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

[tool.black]
# black 代码格式化配置
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# isort 导入排序配置
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["common", "services", "launcher"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_alphabetical_sort_within_sections = true

[tool.pylint]
# pylint 代码检查配置
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
    "C0103",  # invalid-name
]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]
extension-pkg-whitelist = ["pydantic"]

[tool.mypy]
# mypy 类型检查配置
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "test/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "motor.*",
    "redis.*",
    "grpcio.*",
    "uvloop.*",
]
ignore_missing_imports = true

[tool.flake8]
# flake8 代码风格检查配置
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.coverage.run]
# 代码覆盖率配置
source = ["common", "services", "launcher"]
omit = [
    "*/test*",
    "*/tests/*",
    "*/__init__.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
# 覆盖率报告配置
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2