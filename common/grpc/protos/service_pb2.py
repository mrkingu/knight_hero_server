# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rservice.proto\x12\tgame.grpc\"\xb0\x01\n\nRpcRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x13\n\x0bmethod_name\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\x12\x35\n\x08metadata\x18\x04 \x03(\x0b\x32#.game.grpc.RpcRequest.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"=\n\x0bRpcResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\x32\x85\x01\n\x0bGameService\x12\x35\n\x04\x43\x61ll\x12\x15.game.grpc.RpcRequest\x1a\x16.game.grpc.RpcResponse\x12?\n\nStreamCall\x12\x15.game.grpc.RpcRequest\x1a\x16.game.grpc.RpcResponse(\x01\x30\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_RPCREQUEST_METADATAENTRY']._options = None
  _globals['_RPCREQUEST_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_RPCREQUEST']._serialized_start=29
  _globals['_RPCREQUEST']._serialized_end=205
  _globals['_RPCREQUEST_METADATAENTRY']._serialized_start=158
  _globals['_RPCREQUEST_METADATAENTRY']._serialized_end=205
  _globals['_RPCRESPONSE']._serialized_start=207
  _globals['_RPCRESPONSE']._serialized_end=268
  _globals['_GAMESERVICE']._serialized_start=271
  _globals['_GAMESERVICE']._serialized_end=404
# @@protoc_insertion_point(module_scope)
