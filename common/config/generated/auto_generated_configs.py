"""\n自动生成的配置类文件\nAuto-generated Configuration Classes\n\n作者: lx (自动生成)\n日期: 2025-06-20\n描述: 根据JSON配置文件自动生成的Pydantic配置类\n"""\n\nfrom pydantic import BaseModel, Field\nfrom typing import Dict, List, Any, Optional, Union\nfrom common.config.base_config import BaseConfig\n\n# 自动生成的配置类\n\nclass ItemConfig(BaseConfig):\n    """Item配置"""\n\n    item_id: int = Field(description="ID")\n    name: str = Field(description="名称")\n    type: int = Field(description="类型")\n    quality: int = Field(description="品质")\n    price: int = Field(description="价格")\n    description: str = Field(description="描述")\n    max_stack: int = Field(description="最大堆叠")\n    level_requirement: int = Field(description="等级")\n\nclass NpcConfig(BaseConfig):\n    """Npc配置"""\n\n    npc_id: int = Field(description="ID")\n    name: str = Field(description="名称")\n    level: int = Field(description="等级")\n    hp: int = Field(description="生命值")\n    attack: int = Field(description="攻击力")\n    defense: int = Field(description="防御力")\n    drop_items: List[Any] = Field(default_factory=list, description="掉落道具")\n    ai_type: int = Field(description="类型")\n\nclass SkillConfig(BaseConfig):\n    """Skill配置"""\n\n    skill_id: int = Field(description="ID")\n    name: str = Field(description="名称")\n    type: int = Field(description="类型")\n    level: int = Field(description="等级")\n    damage: int = Field(description="伤害")\n    mana_cost: int = Field(description="魔法消耗")\n    cooldown: float = Field(description="冷却时间")\n    description: str = Field(description="描述")\n\nclass GeneratedConfigManager:\n    """自动生成的配置管理器"""\n\n    def __init__(self):\n        """初始化配置管理器"""\n        self.item_config: Dict[int, ItemConfig] = {}\n        self.npc_config: Dict[int, NpcConfig] = {}\n        self.skill_config: Dict[int, SkillConfig] = {}\n\n    # 配置获取方法\n    def get_item(self, config_id: int) -> Optional[ItemConfig]:\n        """获取Item配置"""\n        return self.item_config.get(config_id)\n\n    def get_npc(self, config_id: int) -> Optional[NpcConfig]:\n        """获取Npc配置"""\n        return self.npc_config.get(config_id)\n\n    def get_skill(self, config_id: int) -> Optional[SkillConfig]:\n        """获取Skill配置"""\n        return self.skill_config.get(config_id)\n\n    def clear_all(self):\n        """清空所有配置"""\n        self.item_config.clear()\n        self.npc_config.clear()\n        self.skill_config.clear()\n\n\n# 全局配置管理器实例\ngenerated_config_manager = GeneratedConfigManager()\n\ndef get_generated_config_manager() -> GeneratedConfigManager:\n    """获取自动生成的配置管理器实例"""\n    return generated_config_manager